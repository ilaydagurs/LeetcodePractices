class Solution {
  List<int> twoSum(List<int> nums, int target) {
    // Create a map to store numbers and their indices
    Map<int, int> numMap = {};

    // Iterate through the numbers list
    for (int i = 0; i < nums.length; i++) {
      // Calculate the complement for the current number
      int complement = target - nums[i];
      
      // Check if the complement exists in the map
      if (numMap.containsKey(complement)) {
        // If complement exists, return the indices of the two numbers
        return [numMap[complement] ?? -1, i];
      }
      
      // Add the current number and its index to the map
      numMap[nums[i]] = i;
    }

    // If no match found, return an empty list
    return [];
  }
}
